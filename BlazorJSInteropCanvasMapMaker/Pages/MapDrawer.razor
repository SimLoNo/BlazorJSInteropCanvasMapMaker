@page "/map"
@using BlazorJSInteropCanvasMapMaker.Models
@inject DialogService DialogService;
@inject IJSRuntime Js;

<RadzenRow>
    <RadzenColumn Size="2">
        <RadzenCard >
            <RadzenButton Text="New Map" Click="NewMap" />
            <RadzenText Text="@($"Name: {WorkingMap?.Name}")"></RadzenText>
            <RadzenText Text="@($"Size: {WorkingMap?.Size}Px")"></RadzenText>
        </RadzenCard>
    </RadzenColumn>

    <RadzenColumn id="CanvasColumn" Size="8">
        
            
    </RadzenColumn>

    <RadzenColumn Size="2">
        <RadzenCard>

        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

@code {
    private MapModel? WorkingMap;
    private async void NewMap(){
        var result = await DialogService.OpenAsync<MapInitialise>("", new Dictionary<string, object>(),
               new DialogOptions());
        if (result is null)
        {
            return;
        }
        WorkingMap = result;
        await Js.InvokeVoidAsync("SetCanvas", [WorkingMap.Size, WorkingMap.BaseTerrainColour]);
        StateHasChanged();

    }
}
